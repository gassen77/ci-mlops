name: CI Workflow

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          lfs: true

      # Set up Docker
      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

      # Install Python dependencies for the ML project
      - name: Install Packages
        run: pip install --upgrade pip && pip install -r requirements.txt

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/my-ml-image:latest .

      # Login to GitHub Container Registry using GITHUB_TOKEN
      - name: Login to GitHub Container Registry
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Tag the Docker image after it has been built
      - name: Tag Docker image
        run: |
          docker tag ghcr.io/${{ github.repository }}/my-ml-image:latest ghcr.io/${{ github.repository }}/my-ml-image:latest

      # Push Docker image to GHCR
      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/${{ github.repository }}/my-ml-image:latest

      # Run the Docker container
      - name: Run Docker container
        run: |
          docker run --name ml-container -d ghcr.io/${{ github.repository }}/my-ml-image:latest

      # Test ML project inside Docker container
      - name: Test ML project in Docker container
        run: |
          docker exec ml-container python train.py   # Or any other script you want to run

      # Cleanup Docker container
      - name: Cleanup Docker container
        run: |
          docker stop ml-container
          docker rm ml-container

      # Optional: Cleanup Docker image if you want to save space
      - name: Cleanup Docker image
        run: |
          docker rmi ghcr.io/${{ github.repository }}/my-ml-image:latest
