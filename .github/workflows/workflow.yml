name: CI Workflow

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write  # Allow write access to the repository
  packages: write  # Allow pushing to GitHub Container Registry
  id-token: write  # Optional, if you're using OIDC for authentication

jobs:
  build:
    runs-on: ubuntu-latest  # Use Ubuntu runner

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          lfs: true

      # Set up Docker (if it's not already installed)
      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

      # Install Python dependencies for the ML project
      - name: Install Packages
        run: pip install --upgrade pip && pip install -r requirements.txt

      # Build Docker image (if not built earlier in the workflow)
      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository }}/my-ml-image:latest .

      # Login to GitHub Container Registry
      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Push Docker image to GHCR (if not pushed earlier)
      - name: Push Docker image to GHCR
        run: |
          docker tag my-ml-image ghcr.io/${{ github.repository }}/my-ml-image:latest
          docker push ghcr.io/${{ github.repository }}/my-ml-image:latest

      # Run the Docker container
      - name: Run Docker container
        run: |
          docker run --name ml-container -d ghcr.io/${{ github.repository }}/my-ml-image:latest

      # Test the ML project (run your training/evaluation scripts)
      - name: Test ML project in Docker container
        run: |
          docker exec ml-container python train.py   # Run training script inside the container
          docker exec ml-container python evaluate.py  # Or any other script you want to run

      # Collect results (if applicable)
      - name: Collect results
        run: |
          docker cp ml-container:/path/to/output/results.txt ./results.txt  # Adjust paths as necessary
          cat ./results.txt  # View the output

      # Stop and remove the Docker container
      - name: Cleanup Docker container
        run: |
          docker stop ml-container
          docker rm ml-container

      # Optional: Cleanup the Docker image if you want to save space
      - name: Cleanup Docker image
        run: |
          docker rmi ghcr.io/${{ github.repository }}/my-ml-image:latest
