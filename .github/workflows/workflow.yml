name: CI Workflow

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest  # Use Ubuntu runner

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          lfs: true  # Ensure Git LFS is handled correctly

      # Step 2: Install Docker
      - name: Set up Docker
        run: |
          # Update the apt package index and install required packages
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          
          # Add Docker's official GPG key
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          
          # Set up the stable repository
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          
          # Update apt package index again after adding Docker's repo
          sudo apt-get update
          
          # Install Docker
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

      # Step 3: Verify Docker installation
      - name: Verify Docker installation
        run: |
          docker --version  # Check the Docker version
          sudo docker run hello-world  # Run a simple test container

      # Step 4: Install Python dependencies (example)
      - name: Install Packages
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      # Step 5: Build Docker image (optional, if you have a Dockerfile)
      - name: Build Docker image
        run: |
          docker build -t my-ml-image .

      # Step 6: Push Docker image to GitHub Container Registry (optional)
      - name: Push Docker image to GHCR
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker tag my-ml-image ghcr.io/${{ github.repository }}/my-ml-image:latest
          docker push ghcr.io/${{ github.repository }}/my-ml-image:latest
